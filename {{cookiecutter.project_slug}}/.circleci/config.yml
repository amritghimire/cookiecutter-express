# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mongo:latest
      - image: circleci/python:latest

    working_directory: ~/{{cookiecutter.project_slug}}

    steps:
      - checkout
      
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ '{{' }}checksum "package.json" {{ '}}' }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: make setup

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ '{{' }}checksum "package.json" {{ '}}' }}
  test:
    docker:
      # specify the version you desire here
      - image: circleci/node:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mongo:latest

    working_directory: ~/{{cookiecutter.project_slug}}

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ '{{' }}checksum "package.json" {{ '}}' }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
        
      - run:
          name: JSHint
          command: npm run jshint

      # run tests!
      - run: cp env.example .env
      - run: npm run test

      - run:
          name: code-coverage
          command: './node_modules/.bin/nyc npm run test'
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: test-results.xml
  deploy:
    docker:
      # specify the version you desire here
      - image: circleci/node:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mongo:latest
      - image: circleci/python:latest

    working_directory: ~/{{cookiecutter.project_slug}}

    steps:
      - add_ssh_keys:
              fingerprints:
                      - "XX:XX:XX:XX:XX:XX:XX:XX"
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ '{{' }}checksum "package.json" {{ '}}' }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: make setup
      - run:
              name: Install dependencies
               command: |
                    sudo apt install python3-venv
                    python3 -m venv env
                    . env/bin/activate
                    pip install ansible
                    make remote_update

      - run: make remote_update
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
